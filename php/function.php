
<?php
addBr('hello func');
// Напишите функцию, которая параметром будет принимать число и делить его на 2 столько раз, пока результат не станет меньше 10. Пусть функция возвращает количество итераций, которое потребовалось для достижения результата.
// function diff2($num){
//     $count = 0;
//     for($i = 0; $i < $num; $i++){
//         if($num < 10) {
//         return $count;
//         }
//         $num /= 2;
//         ++$count;
//     }
// }
// addBr(diff2(100));
// addBr(diff2(9));

// Сделайте функцию, которая параметром будет принимать массив с числами, и проверять, что все элементы в этом массиве являются четными числами.
// function allIsEven($arrNum){
//     foreach($arrNum as $num){
//         if($num %2 != 0){
//             return false;
//         }
//     }
//     return true;
// }
// var_dump(allIsEven([2,4,6,]));
// var_dump(allIsEven([1,2,3,4,5]));

// Сделайте функцию, которая параметром будет принимать число и проверять, что все цифры это числа являются нечетными.
// function allIsOdd($arrNum){
//     foreach($arrNum as $num){
//         if($num %2 == 0){
//             return false;
//         }
//     }
//     return true;
// }
// var_dump(allIsOdd([1,3,5]));
// var_dump(allIsOdd([1,2,3,4,5]));

// Сделайте функцию, которая параметром будет принимать массив и проверять, есть ли в этом массиве два одинаковых элемента подряд.
// function isUnic($arr){
//     return count(array_unique($arr)) == count($arr);
// }
// var_dump(isUnic([1,2,3,4,5,6]));
// var_dump(isUnic([1,2,3,4,5,6,1]));

// Имена функций должны быть глаголами.
// Имя каждой функции должно точно отражать то, что функция делает.
// Функция должна делать только то, что явно подразумевается её названием, и не делать другого.
// Каждая функция должна выполнять только одно действие.
// Используйте внутри функций вспомогательные функции.
// Код функций лучше не делать длиннее 10-15 строк.
// Длинные функции лучше разбивать на ряд вспомогательных.
// Используйте общепринятые префиксы в именах функций: show, get, set, calc, create, change, check.
// Выносите дублирующийся код в функции.

?>
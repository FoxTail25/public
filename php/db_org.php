<style>
    th,td {
        border: 1px solid black;
        padding: 5px;
        text-align: center;
        background:gray;
        width: 50px;
    }
    th {
        background: black;
        color:white;
    }
    table {
        caption-side:top;
    }
</style>
<h3 class="fw-bold mt-5">Связывание таблиц в базах данных</h3>
<p>Пусть у нас есть таблица с именами юзеров и городами, в которых они живут:</p>
<table>
    <thead>

        <tr>
            <th>id</th>
            <th>name</th>
            <th>city</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>user1</td>
            <td>city1</td>
        </tr>
        <tr>
            <td>2</td>
            <td>user2</td>
            <td>city1</td>
        </tr>
        <tr>
            <td>3</td>
            <td>user3</td>
            <td>city2</td>
        </tr>
        <tr>
            <td>4</td>
            <td>user4</td>
            <td>city1</td>
        </tr>
        <tr>
            <td>5</td>
            <td>user5</td>
            <td>city3</td>
        </tr>
        <tr>
            <td>6</td>
            <td>user6</td>
            <td>city2</td>
        </tr>
    </tbody>
</table>
<p>Недостатком этой таблицы является то, что один и тот же город повторяется несколько раз для разных юзеров. Это приводит к некторым проблемам.</p>
<ol>
    <li>Постоянное повторение приводит к том что база начинает занимать намного больше места.</li>
    <li>Достаточно неудобно выполнять операции с городами. К примеру, мы хотим вывести на экран список всех городов. Так просто это сделать не получится.Нам предётся получить всех юзеров вместе с их городами, затем удалить дубли у полученных городов и только тогда мы получим список уникльных городов.</li>
</ol>
<p><i><b>А теперь представим что в нашей базе 10 000 юзеров из 10 городов - ради этих 10 городов, нам предется достать всю таблицу из 10 000 тысяч строк затем обработать её - получится очень медленная операция с бессмысленной тратой ресурсов.</b></i></p>

<h4 class="fw-bold mt-3">Решение проблемы</h4>
<p>Нужно разбить нашу таблицу на 2. В одной будут храниться города, в другой - юзеры. При этом в таблице юзерами будет колонка city_id, которая будет <i>ссылаться</i> на город юзера. Иными словами в ней будут храниться id из таблицы городов.</p>
<p>Рассмотрим это на примере:</p>


<table>
    <caption class="pb-0">cities</caption>
    <tbody>
        <tr>
            <th>id</th>
            <th>city</th>
        </tr>
        <tr>
            <td>1</td>
            <td>city1</td>
        </tr>
        <tr>
            <td>2</td>
            <td>city2</td>
        </tr>
        <tr>
            <td>3</td>
            <td>city3</td>
        </tr>
    </tbody>
</table>
<p class="m-0 mt-3">Таблица с юзерами:</p>
<table>
    <caption class="p0-0">users</caption>
    <tbody>
        <tr>
            <th>id</th>
            <th>name</th>
            <th>city_id</th>
        </tr>
        <tr>
            <td>1</td>
            <td>user1</td>
            <td>1</td>
        </tr>
        <tr>
            <td>2</td>
            <td>user2</td>
            <td>1</td>
        </tr>
        <tr>
            <td>3</td>
            <td>user3</td>
            <td>2</td>
        </tr>
        <tr>
            <td>4</td>
            <td>user4</td>
            <td>1</td>
        </tr>
        <tr>
            <td>5</td>
            <td>user5</td>
            <td>3</td>
        </tr>
        <tr>
            <td>6</td>
            <td>user6</td>
            <td>2</td>
        </tr>
    </tbody>
</table>

<h3 class="fw-bold mt-5">Практические задачи</h3>
<p class="fw-bold mt-3">Задача 1</p>
<p>Пусть вам нужно хранить товары (название, цена, количество) и категории этих товаров. Распишите структуру хранения.</p>
<p class="fw-bold">Решение:</p>
<p>1 Вариант. Создаём 2 таблицы. Первая <i>"Товары"</i> в ней хранится <i>названи, цена и количество</i>. Во второй таблице <i>"категория"</i>хранится <i>категория товара</i></p>
<p>2 Вариант. Создаём 4 таблицы: <i>"Название", "Цена", "Количество", "Категории"</i></p>
<p class="fw-bold mt-3">Задача 2</p>
<p>Пусть вам нужно хранить реки и моря, в которые впадают эти реки. Распишите структуру хранения.</p>
<p class="fw-bold">Решение:</p>
<p>Создаём 2 таблицы. Первая <i>"Моря"</i> Вторая <i>"Реки"</i></p>
<p class="fw-bold mt-3">Задача 3</p>
<p>Пусть вам нужно хранить города и страны, в которых они находятся. Распишите структуру хранения.</p>
<p class="fw-bold">Решение:</p>
<p>Создаём 2 таблицы. Первая <i>"Города"</i> Вторая <i>"Страны"</i></p>

<h3 class="fw-bold mt-5">Получении данных из связанных таблиц в PHP
</h3>
<p>Давайте сделаем запрос, который достанет всех юзеров вместе с их городами. <br/>Для этого нам понадобится команда:</p>
<h5 class="text-info">LEFT JOIN:</h5>
<p>Ее синтаксис выглядит следующим образом:</p>
<!-- <code> -->
    <pre>
    <span class="text-warning">SELECT</span> поля FROM имя_таблицы
	LEFT JOIN имя_связанной_таблицы ON условие_связи 
    WHERE условие_выборки
    </pre>
<!-- </code> -->

<!-- 
<p class="fw-bold mt-3">Задача 1</p>
<p>Пусть в корне вашего сайта лежит папка dir, а в ней какие-то текстовые файлы. Выведите на экран столбец имен этих файлов.</p>
<p class="fw-bold">Решение:</p>
<code>
<pre>
	&lt?php
	?></pre>
</code>
<p class="fw-bold">Результат:</p> 
<?php

?>
-->


<!-- 
<h3 class="fw-bold mt-5">Практические задачи</h3>
  -->